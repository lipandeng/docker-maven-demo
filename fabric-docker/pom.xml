<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>icu.climber.demo</groupId>
        <artifactId>docker-maven-demo</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <groupId>icu.climber.demo</groupId>
    <artifactId>fabric-docker</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>fabric-docker</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.7</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>3.0.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper-spring-boot-starter -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.3.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.37.0</version>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 如果docker环境在远程请配置dockerHost、certPath，certPath目录下有3个文件：ca.pem、cert.pem、key.pem，
                    打开docker远程访问参考链接：https://www.jianshu.com/p/31c3d7ae26a2 -->
                    <dockerHost>https://12.78.18.15:2376</dockerHost>
                    <certPath>D:\DevOps\docker-ca</certPath>
                    <!-- Docker 推送镜像仓库地址-->
                    <pushRegistry>http://12.78.18.15:5000</pushRegistry>
                    <images>
                        <image>
                            <!--推送到私有镜像仓库，镜像名需要添加仓库地址-->
                            <name>12.78.18.15:5000/${project.name}:${project.version}</name>
                            <!--定义镜像构建行为-->
                            <build>
                                <dockerFileDir>${project.basedir}</dockerFileDir>
                            </build>
                            <!--定义容器启动行为-->
                            <run>
                                <!--设置容器名，可采用通配符-->
                                <containerNamePattern>${project.artifactId}</containerNamePattern>
                                <!--设置端口映射-->
                                <ports>
                                    <port>8082:8082</port>
                                </ports>
                                <!--设置容器间连接-->
                                <links>
                                    <link>mysql:db</link>
                                </links>
                                <!--设置容器和宿主机目录挂载-->
                                <volumes>
                                    <bind>
                                        <volume>/etc/localtime:/etc/localtime</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
